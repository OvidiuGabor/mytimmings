@model IEnumerable<mytimmings.Models.Portal.DayRecord>
@Styles.Render("~/Portal/css")
@Scripts.Render("~/bundles/jqueryui")
@{
    ViewBag.Title = "Edit Time";
}
<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.js"></script>
<script type="text/javascript" src="//code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css">
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-sliderAccess.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.css">
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.js"></script>
<script>
    var jquery_1_9_1 = $.noConflict(true);
</script>
@if (Session["User"] != null)
{
<div class="main-body-container w3-main">

    @Html.Partial("_Notification")

    @if (Model.Count() > 0)
    {
    <div id="status-bar">

        <div class="status-title">
            <h3>Today Tracker</h3>
        </div>

        <div class="status-bar-tracker">
            @*<div id="myBar" class="w3-container w3-green w3-center status-bar-interval" style="width: 0.00%">@Model.CurrentDayOverview.totalTime</div>*@
        </div>

    </div>
    }



    <div class="update-form-wrapper">
        @using (Html.BeginForm("SaveRecord", "Portal", FormMethod.Post, new { @class = "left-postion" }))
        {
            var item = Model.FirstOrDefault();

            <div class="form-title">
                <h3>Update</h3>
            </div>

            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <input type='text' class="form-control datetimepicker-input" id="startDate" name="startDate" placeholder="00:00" value="@item.startDate.ToLocalTime()" onkeydown="return false" />
                        <label for="startDate"><span>Start Time</span> </label>
                        <span class="field-validation-valid" data-valmsg-for="startDate" data-valmsg-replace="true"></span>
                    </div>

                    <div class="form-group">
                        @{
                            DateTime? endDate = null;
                            if (item.endDate.HasValue)
                            {
                                endDate = item.endDate.Value.ToLocalTime();
                            }

                            <input type='text' class="form-control datetimepicker-input" id="endDate" name="endDate" placeholder="00:00" value="@endDate" />
                            <label for="endDate"><span>End Time</span> </label>
                            <span class="field-validation-valid" data-valmsg-for="endDate" data-valmsg-replace="true"></span>
                        }
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <input type='text' class="form-control t" id="status" name="status" value="@item.status" />
                        <label for="startDate"><span>Status</span> </label>
                        <span class="field-validation-valid" data-valmsg-for="status" data-valmsg-replace="true"></span>
                    </div>

                    <div class="form-group">
                        <input type='text' class="form-control " id="projectName" name="projectName" value="@item.projectName" />
                        <label for="endDate"><span>Project</span> </label>
                        <span class="field-validation-valid" data-valmsg-for="projectName" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <input type='text' class="form-control " id="totalTime" name="totalTime" value="@item.totalTime" onkeydown="return false" />
                        <label for="totalTime"><span>Time Passed</span> </label>
                        <span class="field-validation-valid" data-valmsg-for="totalTime" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" id="comments" name="comments" value="@item.comments"></textarea>
                        <label for="comments"><span>Comments</span> </label>
                    </div>
                </div>

            </div>

            <input type='hidden' class="form-control " id="id" name="id" value="@item.id" />
            <input type='hidden' class="form-control " id="userid" name="userid" value="@item.userid" />
            <div class="" style="padding-bottom:2em">
                <input type="submit" class="btn btn-primary" value="Update" name="Update" />
            </div>
        }

    </div>

    <div class="edit-actions-table">

        <div class="form-title">
            <h3>Today Actions</h3>
        </div>
        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>
                    @*<th>
                            @Html.DisplayNameFor(model => model.currentDate)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.startDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.endDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.status)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.projectId)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.projectName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.isRunning)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.comments)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.totalTime)
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    string startTime = item.startDate.ToLocalTime().ToString("HH:mm:ss");
                    string endTime = "";

                    if (item.endDate != null)
                    {
                        endTime = item.endDate.HasValue ? item.endDate.Value.ToLocalTime().ToString("HH:mm:ss") : "Running";
                    }
                    <tr>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.userid)
                            </td>*@
                        @*<td>
                                @Html.DisplayFor(modelItem => item.currentDate)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => startTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => endTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.status)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.projectId)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.projectName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.isRunning)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.comments)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.totalTime)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>
                    </tr>
                }
            </tbody>


        </table>
    </div>


</div>

    <script>

        $(document).ready(function () {
            //Set the start date and time
            var d = new Date()
            d.setHours(0)
            d.setMinutes(0)
            d.setSeconds(0)
            jquery_1_9_1('.datetimepicker-input').datetimepicker({
                dateFormat: 'dd/mm/yy',
                timeFormat: 'HH:mm:ss',
                interval: 60,
                dynamic: true,
                dropdown: true,
                scrollbar: true,
                maxDate: new Date(),
                minDate: d
            });
        });


        var ServerModel = @Html.Raw(Json.Encode(Model));
        var userSettings = @Html.Raw(Json.Encode(Session["UserSettings"]));


        if (ServerModel.length > 0) {
            for (var i = 0; i < ServerModel.length; i++) {
                var currentItem = ServerModel[i]
                generateStatusBar(currentItem, i, (userSettings.TotalTime * 3600))

                if (ServerModel[i].endDate == "null" || ServerModel[i].endDate == null) {
                    lastElement = ServerModel[i];
                }
            }
        }





        console.log(userSettings)

    </script>


}
else
{
    <script>
        window.location.href = "@Url.Action("Index","Home")";
    </script>
}

