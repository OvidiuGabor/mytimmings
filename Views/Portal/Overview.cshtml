@model mytimmings.Models.Portal.Dashboard
<link href="~/Content/Stylesheet/Portal.css" rel="stylesheet" />
<script src="~/Scripts/Chart.js"></script>
@{
    ViewBag.Title = "Overview";
}
<div class="w3-main" style="margin-left: 300px; margin-top: 43px;">
    <div class="w3-container conainer-padding" style="padding-top: 60px">
        <h1>My Dashboard</h1>
        @*<hr />*@
    </div>
    @*<div class="width-and-center" style="text-align:left; margin-top: 25px ">
            <h3>My Stats</h3>
        </div>*@

    <div class="w3-container conainer-padding" style="padding-top: 10px">
        <div class="row user-information-header" style="margin-left: 0px">
            <div class="col-md-3 w3-white round-corners-left-15">
                <div class="user-body">
                    <div class="user-details">
                        <div class="user-detail-title">
                            @{
                                var name = Model.user.FirstName.ToString() + " " + Model.user.LastName.ToString();
                            }
                            @name
                        </div>
                        <div class="user-detail-test">
                            @Model.user.JobTitle

                        </div>
                    </div>
                    <div class="devider redish"></div>
                </div>

            </div>
            <div class="col-md-3 w3-white">
                <div class="user-body">
                    <div class="user-details">
                        <div class="user-detail-title">
                            Employee Id
                        </div>
                        <div class="user-detail-test">
                            @Model.user.ID

                        </div>
                    </div>
                    <div class="devider redish"></div>
                </div>

            </div>
            <div class="col-md-3 w3-white">
                <div class="user-body">
                    <div class="user-details">
                        <div class="user-detail-title">
                            Joining Date
                        </div>
                        <div class="user-detail-test">
                            @Model.user.StartDate.ToString("dd MMMM yyyy")

                        </div>
                    </div>
                    <div class="devider redish"></div>
                </div>

            </div>
            <div class="col-md-3 w3-white round-corners-right-15">
                <div class="user-body">
                    <div class="user-details">
                        <div class="user-detail-title">
                            Department
                        </div>
                        <div class="user-detail-test">
                            @Model.user.Department

                        </div>
                    </div>
                    @* <div class="devider grey"></div>*@
                </div>

            </div>

        </div>

        <div class="row user-time-status">
            <div class="col-md-6 w3-white round-corners-left-15 round-corners-right-15">
                <canvas id="myChart" width="400" height="400"></canvas>
            </div>
            <div class="col-md-6 w3-white">

            </div>
        </div>

    </div>
</div>

<script>
    const ctx = document.getElementById('myChart');
    const plugin = {
        id: 'custom_canvas_background_color',
        beforeDraw: (chart) => {
            const ctx = chart.canvas.getContext('2d');
            ctx.save();
            ctx.globalCompositeOperation = 'destination-over';
            ctx.fillStyle = 'white';
            ctx.fillRect(0, 0, chart.width, chart.height);
            ctx.restore();
        }
    };
    const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['1', '2', '3', '4', '5', '6', '7'],
            datasets: [{
                label: 'Hours',
                data: [7.5, 8, 9, 7.5, 0, 7.5, 9],
                backgroundColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)' ,
                    'rgba(255, 159, 64, 1)'
                ]
                //borderColor: [
                //    'rgba(255, 99, 132, 1)',
                //    'rgba(54, 162, 235, 1)',
                //    'rgba(255, 206, 86, 1)',
                //    'rgba(75, 192, 192, 1)',
                //    'rgba(153, 102, 255, 1)',
                //    'rgba(255, 159, 64, 1)'
                //],
               //borderWidth: 1
            }]
        },
        options: {
            "hover": {
                "animationDuration": 0
            },
            "animation": {
                "duration": 1,
                "onComplete": function () {
                    var chartInstance = this.chart,
                        ctx = chartInstance.ctx;

                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'bottom';

                    this.data.datasets.forEach(function (dataset, i) {
                        var meta = chartInstance.controller.getDatasetMeta(i);
                        meta.data.forEach(function (bar, index) {
                            var data = dataset.data[index];
                            ctx.fillText(data, bar._model.x, bar._model.y - 5);
                        });
                    });
                }
            },
            legend: {
                "display": false
            },
            tooltips: {
                "enabled": false
            },
            scales: {

                yAxes: [{
                    //display: 'false',
                    gridLines: {
                        display: false
                    },
                    ticks: {
                        max: 16,
                        //display: false,
                        beginAtZero: true
                    }
                    
                }],

                xAxes: [{
                    gridLines: {
                        display: false
                    },
                     ticks: {
                        beginAtZero: true
                    }
                    
                }]
               
            }
        },
         plugins: [plugin]
    });



    



</script>